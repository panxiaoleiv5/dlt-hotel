<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.handinglian.system.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.handinglian.system.entity.UserInfo">
    <!--@mbg.generated-->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="job_num" jdbcType="VARCHAR" property="jobNum" />
    <result column="mobile_phone_num" jdbcType="VARCHAR" property="mobilePhoneNum" />
    <result column="eamil" jdbcType="VARCHAR" property="eamil" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, department_id, user_name, `position`, job_num, mobile_phone_num, eamil, 
    `password`, salt, create_time, update_time, `valid`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.handinglian.system.entity.UserInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_info (department_id, user_name, `position`, 
      job_num, mobile_phone_num, eamil, 
      `password`, salt, create_time, 
      update_time, `valid`)
    values (#{departmentId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{jobNum,jdbcType=VARCHAR}, #{mobilePhoneNum,jdbcType=VARCHAR}, #{eamil,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{valid,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.handinglian.system.entity.UserInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="userName != null and userName != ''">
        user_name,
      </if>
      <if test="position != null and position != ''">
        `position`,
      </if>
      <if test="jobNum != null and jobNum != ''">
        job_num,
      </if>
      <if test="mobilePhoneNum != null and mobilePhoneNum != ''">
        mobile_phone_num,
      </if>
      <if test="eamil != null and eamil != ''">
        eamil,
      </if>
      <if test="password != null and password != ''">
        `password`,
      </if>
      <if test="salt != null and salt != ''">
        salt,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="userName != null and userName != ''">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="position != null and position != ''">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="jobNum != null and jobNum != ''">
        #{jobNum,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhoneNum != null and mobilePhoneNum != ''">
        #{mobilePhoneNum,jdbcType=VARCHAR},
      </if>
      <if test="eamil != null and eamil != ''">
        #{eamil,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null and salt != ''">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.handinglian.system.entity.UserInfo">
    <!--@mbg.generated-->
    update user_info
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="userName != null and userName != ''">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="position != null and position != ''">
        `position` = #{position,jdbcType=VARCHAR},
      </if>
      <if test="jobNum != null and jobNum != ''">
        job_num = #{jobNum,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhoneNum != null and mobilePhoneNum != ''">
        mobile_phone_num = #{mobilePhoneNum,jdbcType=VARCHAR},
      </if>
      <if test="eamil != null and eamil != ''">
        eamil = #{eamil,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null and salt != ''">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.handinglian.system.entity.UserInfo">
    <!--@mbg.generated-->
    update user_info
    set department_id = #{departmentId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      `position` = #{position,jdbcType=VARCHAR},
      job_num = #{jobNum,jdbcType=VARCHAR},
      mobile_phone_num = #{mobilePhoneNum,jdbcType=VARCHAR},
      eamil = #{eamil,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <!--auto generated by MybatisCodeHelper on 2019-06-25-->
  <select id="find" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
  </select>

  <!--auto generated by MybatisCodeHelper on 2019-06-25-->
  <select id="findOneByJobNum" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
    where job_num=#{jobNum,jdbcType=VARCHAR} and valid=1
  </select>

  <select id="findInvalidOneByJobNum" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
    where job_num=#{jobNum,jdbcType=VARCHAR} and valid=0
  </select>

  <select id="inquirePermissionList" resultType="com.handinglian.system.entity.Permission">
    SELECT p.* FROM user_info u, role r, user_role_realtion ur, permission p, role_permission_relation rp WHERE u.`user_id` = ur.`user_id` AND ur.`role_id` = r.`role_id` AND r.`role_id`=rp.`role_id` AND rp.`permission_id`=p.`permission_id` AND u.`valid`=1 AND r.`valid`=1 AND p.`valid`=1 AND u.`job_num`=#{jobNum}
  </select>
</mapper>