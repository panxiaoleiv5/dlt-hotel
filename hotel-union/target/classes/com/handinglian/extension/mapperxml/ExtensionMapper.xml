<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.handinglian.extension.mapper.ExtensionMapper">
  <resultMap id="BaseResultMap" type="com.handinglian.extension.entity.Extension">
    <!--@mbg.generated-->
    <id column="extension_id" jdbcType="INTEGER" property="extensionId" />
    <result column="extension_no" jdbcType="VARCHAR" property="extensionNo" />
    <result column="room_no" jdbcType="VARCHAR" property="roomNo" />
    <result column="passsword" jdbcType="VARCHAR" property="passsword" />
    <result column="random_code" jdbcType="VARCHAR" property="randomCode" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    extension_id, extension_no, room_no, passsword, random_code, create_time, update_time, 
    `valid`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from extension
    where extension_id = #{extensionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from extension
    where extension_id = #{extensionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="extension_id" keyProperty="extensionId" parameterType="com.handinglian.extension.entity.Extension" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into extension (extension_no, room_no, passsword, 
      random_code, create_time, update_time, 
      `valid`)
    values (#{extensionNo,jdbcType=VARCHAR}, #{roomNo,jdbcType=VARCHAR}, #{passsword,jdbcType=VARCHAR}, 
      #{randomCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="extension_id" keyProperty="extensionId" parameterType="com.handinglian.extension.entity.Extension" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into extension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="extensionNo != null and extensionNo != ''">
        extension_no,
      </if>
      <if test="roomNo != null and roomNo != ''">
        room_no,
      </if>
      <if test="passsword != null and passsword != ''">
        passsword,
      </if>
      <if test="randomCode != null and randomCode != ''">
        random_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="extensionNo != null and extensionNo != ''">
        #{extensionNo,jdbcType=VARCHAR},
      </if>
      <if test="roomNo != null and roomNo != ''">
        #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="passsword != null and passsword != ''">
        #{passsword,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.handinglian.extension.entity.Extension">
    <!--@mbg.generated-->
    update extension
    <set>
      <if test="extensionNo != null and extensionNo != ''">
        extension_no = #{extensionNo,jdbcType=VARCHAR},
      </if>
      <if test="roomNo != null and roomNo != ''">
        room_no = #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="passsword != null and passsword != ''">
        passsword = #{passsword,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        random_code = #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=TINYINT},
      </if>
    </set>
    where extension_id = #{extensionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.handinglian.extension.entity.Extension">
    <!--@mbg.generated-->
    update extension
    set extension_no = #{extensionNo,jdbcType=VARCHAR},
      room_no = #{roomNo,jdbcType=VARCHAR},
      passsword = #{passsword,jdbcType=VARCHAR},
      random_code = #{randomCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=TINYINT}
    where extension_id = #{extensionId,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update extension
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="extension_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.extensionNo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="room_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.roomNo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="passsword = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.passsword,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="random_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.randomCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`valid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when extension_id = #{item.extensionId,jdbcType=INTEGER} then #{item.valid,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where extension_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.extensionId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="extension_id" keyProperty="extensionId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into extension
    (extension_no, room_no, passsword, random_code, create_time, update_time, `valid`
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.extensionNo,jdbcType=VARCHAR}, #{item.roomNo,jdbcType=VARCHAR}, #{item.passsword,jdbcType=VARCHAR}, 
        #{item.randomCode,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.valid,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="extension_id" keyProperty="extensionId" parameterType="com.handinglian.extension.entity.Extension" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into extension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="extensionId != null">
        extension_id,
      </if>
      extension_no,
      room_no,
      passsword,
      random_code,
      create_time,
      update_time,
      `valid`,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="extensionId != null">
        #{extensionId,jdbcType=INTEGER},
      </if>
      #{extensionNo,jdbcType=VARCHAR},
      #{roomNo,jdbcType=VARCHAR},
      #{passsword,jdbcType=VARCHAR},
      #{randomCode,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{valid,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="extensionId != null">
        extension_id = #{extensionId,jdbcType=INTEGER},
      </if>
      extension_no = #{extensionNo,jdbcType=VARCHAR},
      room_no = #{roomNo,jdbcType=VARCHAR},
      passsword = #{passsword,jdbcType=VARCHAR},
      random_code = #{randomCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=TINYINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="extension_id" keyProperty="extensionId" parameterType="com.handinglian.extension.entity.Extension" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into extension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="extensionId != null">
        extension_id,
      </if>
      <if test="extensionNo != null">
        extension_no,
      </if>
      <if test="roomNo != null">
        room_no,
      </if>
      <if test="passsword != null">
        passsword,
      </if>
      <if test="randomCode != null">
        random_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="extensionId != null">
        #{extensionId,jdbcType=INTEGER},
      </if>
      <if test="extensionNo != null">
        #{extensionNo,jdbcType=VARCHAR},
      </if>
      <if test="roomNo != null">
        #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="passsword != null">
        #{passsword,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null">
        #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="extensionId != null">
        extension_id = #{extensionId,jdbcType=INTEGER},
      </if>
      <if test="extensionNo != null">
        extension_no = #{extensionNo,jdbcType=VARCHAR},
      </if>
      <if test="roomNo != null">
        room_no = #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="passsword != null">
        passsword = #{passsword,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null">
        random_code = #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

<!--auto generated by MybatisCodeHelper on 2019-05-24-->
	<select id="find" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from extension where valid = 1
  </select>

<!--auto generated by MybatisCodeHelper on 2019-05-27-->
	<select id="findInvalidOneByExtensionNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from extension
    where extension_no=#{extensionNo,jdbcType=VARCHAR} and valid = 0
  </select>

  <select id="findOneByExtensionNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from extension
    where extension_no=#{extensionNo,jdbcType=VARCHAR} and valid = 1
  </select>

<!--auto generated by MybatisCodeHelper on 2019-05-27-->
	<update id="updateValidByExtensionNo">
    update extension
    set `valid`=#{updatedValid,jdbcType=INTEGER}
    where extension_no=#{extensionNo,jdbcType=VARCHAR}
  </update>
</mapper>